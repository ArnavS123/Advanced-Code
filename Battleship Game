#include <stdio.h>
#include <stdlib.h>

#define INITIALMONEY 100
#define INITIALMAXHEALTH 100
#define INITIALSTORAGE 500
#define MAXSTORAGE 2000
#define CONVFACT 5
#define MINONE 25
#define MAXONE 75
#define MINTWO 75
#define MAXTWO 150
#define MINTHREE 150
#define MAXTHREE 350

int Seed();
int Randnum(int, int);
int Choose();
void Stats(char[]);
void Move();
void Attack();
void AttackEffects(int, int);
int CheckMats(int);
void ImproveStorage();
void ImproveShip();
void Repair(char*);
void Upgrade(char*);
char UpgradeCost(int);
void Rename(char*);

int money = INITIALMONEY;
int health = INITIALMAXHEALTH;
int maxhealth = INITIALMAXHEALTH;
int cloth = 0;
int wood = 0;
int metal = 0;
int storage = INITIALSTORAGE;
int loc = 1;
int upgradelevel = 1;
char name[35] = "Your Ship";

int main(void)
{
  int seed;
  int choice;
  int choice2;

  seed = Seed();
  srand(seed);

  printf("\nWelcome to the battleship game!\n\nHere are your choices:\nChoice #1: Display Stats\nChoice #2: Move\nChoice #3: Attack\nChoice #4: Upgrade/Repair\nChoice #5: Rename Ship\nChoice #6: Exit\n");

  do
  {
    if (health <= 0)
    {
      printf("\n%s has sunk! Game over!\n", name);
      break;
    }
    choice = Choose();
    switch (choice)
    {
      case 1:
        Stats(name);
        break;
      case 2:
        Move();
        break;
      case 3:
        Attack();
        break;
      case 4:
        do
        {
          printf("\nWould you like to upgrade your storage or ship? Enter 1 for storage and 2 for ship -> ");
          scanf("%d", &choice2);
          if (choice2 < 1 || choice2 > 2)
          {
            printf("\nError! Enter 1 for storage or 2 for ship!\n");
          }
        } while (choice2 < 1 || choice2 > 2);

        switch (choice2)
        {
          case 1:
            ImproveStorage();
            break;
          case 2:
            ImproveShip();
            break;
        }
        break;
      case 5:
        Rename(name);
        break;
    }
  } while (choice != 6);

  printf("\nThank you for playing!");
  
  return (0);
}

int Seed()
{
  int seed;

  do
  {
    printf("Please enter a seed -> ");
    scanf("%d", &seed);
    if (seed <= 0)
    {
      printf("\nError! Seed value must be positive (above 0)!\n\n");
    }
  } while (seed <= 0);

  return (seed);
}

int Randnum(int maxval, int minval)
{
  int num;

  num = rand() % (maxval - minval) + minval;
  
  return (num);
}

int Choose()
{
  int choice;

  do
  {
    printf("\nCurrent health: %d\n", health);
    printf("Please select a choice (1 - 6) -> ");
    scanf("%d", &choice);
    if (choice < 1 || choice > 6)
    {
      printf("\nError! Choose an option between 1 and 6!\n\n");
    }
  } while (choice < 1 || choice > 6);

  return (choice);
}

void Stats(char name[])
{
  printf("\nStats of '%s':", name);
  printf("\nMoney: %d", money);
  printf("\nHealth: %d / %d", health, maxhealth);
  printf("\nCloth: %d / %d", cloth, storage);
  printf("\nWood: %d / %d", wood, storage);
  printf("\nMetal: %d / %d\n", metal, storage);
}

void Move()
{
  char yn;
  int curloc = loc;

  printf("\nThere are three locations:\nlocation 1 - Easy Difficulty\nlocation 2 - Medium Difficulty\nlocation 3 - Hard Difficulty\n\nCurrent location: %d", loc);
  do
  {
    printf("\n\nWould you like to move? Enter y or n -> ");
    scanf(" %c", &yn);
    if (yn != 'y' && yn != 'n')
    {
      printf("\nError! Enter y for yes or n for no!");
    }
  } while (yn != 'y' && yn != 'n');

  if (yn == 'y')
  {
    do
    {
      printf("\nMove from location %d to location -> ", curloc);
      scanf("%d", &loc);
      if (loc > 3 || loc < 1)
      {
        printf("\nError! Choose location 1, 2, or 3!\n");
      }
    } while (loc > 3 || loc < 1);
    printf("\nSucessfully moved to location %d\n", loc);
  }
  else
  {
    printf("\nStayed at location %d\n", loc);
  }
}

void Attack()
{
  switch (loc)
  {
    case 1:
      AttackEffects(MAXONE, MINONE);
      break;
    case 2:
      AttackEffects(MAXTWO, MINTWO);
      break;
    case 3:
      AttackEffects(MAXTHREE, MINTHREE);
      break;
  }
}

void AttackEffects(int max, int min)
{
  money += Randnum(max, min);
  health -= Randnum(max, min);
  cloth += Randnum(max, min);
  cloth = CheckMats(cloth);
  wood += Randnum(max, min);
  wood = CheckMats(wood);
  metal += Randnum(max, min);
  metal = CheckMats(metal);
}

int CheckMats(int material)
{
  material = material >= storage ? storage : material;

  return (material);
}

void ImproveStorage()
{
  int oldstorage;
  char yn;
  int storeup = 500;
  
  do
  {
    printf("\nConfirm: Would you like to upgrade your storage? Enter y or n -> ");
    scanf(" %c", &yn);
    if (yn != 'y' && yn != 'n')
    {
      printf("\nError! Enter y for yes or n for no!\n");
    }
  } while (yn != 'y' && yn != 'n');
  
  if (money >= storeup && yn == 'y' && storage < MAXSTORAGE)
  {
    oldstorage = storage;
    storage += INITIALSTORAGE;
    money -= storeup;
    printf("\nStorage successfully upgraded from %d to %d!\n", oldstorage, storage);
  }

  else
  {
    if (yn == 'y')
    {
      storage < MAXSTORAGE ? : printf("\nMaximum storage reached!\n");
      money >= storeup && storage == MAXSTORAGE ? : printf("\nNot enough money!\n");
    }

    printf("\nStorage left at %d\n", storage);
  }
}

void ImproveShip()
{
  int choice3;

  do
  {
    printf("\nWould you like to repair or upgrade your ship? Enter 1 for repair and 2 for upgrade -> ");
    scanf("%d", &choice3);
    if (choice3 < 1 || choice3 > 2)
      {
        printf("\nError! Enter 1 for repair or 2 for upgrade!\n");
      }
  } while (choice3 < 1 || choice3 > 2);

  switch (choice3)
  {
    case 1:
      Repair(name);
      break;
    case 2:
      Upgrade(name);
      break;
  }
}

void Repair(char *name)
{
  char yn;

  do
  {
    printf("\nConfirm: Would you like to repair %s? Enter y or n -> ", name);
    scanf(" %c", &yn);
    if (yn != 'y' && yn != 'n')
    {
      printf("\nError! Enter y for yes or n for no!\n");
    }
  } while (yn != 'y' && yn != 'n');

  if (yn == 'y' && money >= maxhealth / CONVFACT)
  {
    money -= maxhealth / 5;
    health = maxhealth;
    printf("\n%s is repaired!\n", name);
  }

  else
  {
    if (yn == 'y' && money < maxhealth / CONVFACT)
    {
      printf("\nNot enough money!\n");
    }
  }
}

void Upgrade(char *name)
{
  char yn;
  int oldmaxhealth = maxhealth;
  
  do
  {
    printf("\nConfirm: Would you like to upgrade %s? Enter y or n -> ", name);
    scanf(" %c", &yn);
    if (yn != 'y' && yn != 'n')
    {
      printf("\nError! Enter y for yes or n for no!\n");
    }
  } while (yn != 'y' && yn != 'n');

  if (yn == 'y' && UpgradeCost(upgradelevel++) == 'y')
  {
    if (upgradelevel > 5)
    {
      printf("\nNo more upgrades available!\n");
    }
    else
    {
      maxhealth += 100 * upgradelevel;
      health = health == oldmaxhealth ? maxhealth : health;
      printf("\nUpgraded to level %d\n", upgradelevel);
    }
  }
}

char UpgradeCost(int level)
{
  int var = 'n';
  int cost = level * 250;

  if (money >= cost && cloth >= cost && wood >= cost && metal >= cost)
  {
    printf("\nUpgrading...\n");
    money -= cost;
    cloth -= cost;
    wood -= cost;
    metal -= cost;
    var = 'y';
  }
  else
  {
    printf("\n");
    money >= cost ? : printf("Not enough money! ");
    cloth >= cost ? : printf("Not enough cloth! ");
    wood >= cost ? : printf("Not enough wood! ");
    metal >= cost ? : printf("Not enough metal!");
    printf("\n");
  }
  
  return (var);
}

void Rename(char *name)
{
  char yn;

  printf("\nCurrent name: %s", name);
  do
  {
    printf("\n\nWould you like to change this name? Enter y or n -> ");
    scanf(" %c", &yn);
    if (yn != 'y' && yn != 'n')
    {
      printf("\nError! Enter y for yes or n for no!");
    }
  } while (yn != 'y' && yn != 'n');

  if (yn == 'y')
  {
    printf("\nChange '%s' to -> ", name);
    scanf("%s", name);
    printf("\nNew ship name now saved as: %s\n", name);
  }
  else
  {
    printf("\nPrevious name of '%s' retained\n", name);
  }
}
